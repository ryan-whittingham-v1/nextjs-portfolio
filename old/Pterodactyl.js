/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export default function Pterodactyl({ pose, ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/Flying pterodactyl.glb');
  const { actions, names } = useAnimations(animations, group);
  const [index, setIndex] = useState(pose);

  useFrame(() => {
    group.current.rotation.y -= 0.001;
  });

  useEffect(() => {
    // Reset and fade in animation after an index has been changed
    actions[names[index]].reset().fadeIn(0.5).play();
    // In the clean-up phase, fade it out
    return () => actions[names[index]].fadeOut(0.5);
  }, [index, actions, names]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group
        scale={[0.03, 0.03, 0.03]}
        onClick={() => setIndex((index + 1) % names.length)}
      >
        <skinnedMesh
          geometry={nodes.pterodactyl2.geometry}
          material={nodes.pterodactyl2.material}
          skeleton={nodes.pterodactyl2.skeleton}
        />
        <primitive object={nodes.Root4} />
      </group>
    </group>
  );
}

useGLTF.preload('/Flying pterodactyl.glb');
